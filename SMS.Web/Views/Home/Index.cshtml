@using PagedList;
@using PagedList.Mvc;
@model IPagedList<SMS.Data.Models.Vehicle>
@{
    ViewBag.Title = "Stock";
} 
<h2>Welcome @Session["UserName"]</h2>
<div>
    @using (Html.BeginForm("Index", "Home", FormMethod.Get)) {
        <div class="row">
            <div class="col-md-2">
                @Html.DropDownList("status", EnumHelper.GetSelectList(typeof(SMS.Data.enums.Status)), "Select Status", htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-md-10">
                <input type="submit" class="btn btn-primary" value="Filter" />
            </div>
        </div>                              
    }
</div>
<div>
    <table class="table table-bordered" id="table-dashboard">
        <thead>
            <tr>
                <th class="w5">Stock No</th>
                <th class="w75">Date</th>
                <th class="w75">Make</th>
                <th class="w75">Model</th>
                <th class="w5">Rego</th>
                <th class="w5">Kilometers</th>
                <th class="w5">Cost Price</th>
                <th class="w5">S. Price</th>
                <th class="w15">Extra Costs</th>
                <th class="w10">Profit</th>
                <th class="w5">Status</th>
                <th class="w75">Sold Date</th>
                <th class="w10">Action</th>
            </tr>
        </thead>
        @foreach (var v in Model)
    {
            <tr>
                <td class="w5">@v.Id</td>
                <td class="w75">@String.Format("{0: dd/MM/yyyy}", @v.DateEntered)</td>
                <td class="w75">@v.Make</td>
                <td class="w75">@v.Model</td>
                <td class="w5">@v.Rego</td>
                <td class="w5">@String.Format("{0:0,#}", v.Kilometers)</td>
                <td class="w5 blue">@v.CostPrice</td>@*@String.Format("{0:c}", v.CostPrice)*@
                <td class="w5 green">@String.Format("{0:c}", v.SellingPrice)</td>              
                <td class="w10 red">
         
                        @{float total = 0;}
                        @foreach (var c in v.ExtraCost)
                        {                      
                          total += c.Cost;                             
                        }
                                @if (total != 0)
                                {
                                @Html.ActionLink(String.Format("{0:c} |", total), "ExtraDetails", "Home", routeValues: new { id = v.Id}, htmlAttributes: new { @class = "red"})
                                }
                                @Html.ActionLink("Add", "AddExtras", "Home", routeValues: new { id = v.Id }, htmlAttributes: null)                                          
                </td>
                @{ 
                    float? profit = (v.SellingPrice - (v.CostPrice+ total));
                    float? profitPercentage = profit / (v.CostPrice + total) * 100;
                }
                <td class="w15">@String.Format("{0:c}", profit) / @profitPercentage%</td>
                @{ 
                    if(v.Status == 1)
                    {
                        <td class="w5 item-not-sold">Available</td>
                    }
                    if(v.Status == 2)
                    {
                        <td class="w5 item-sold">Sold</td>
                    }
                    if(v.Status == 3)
                    {
                        <td class="w5 item-pending">Pending</td>
                    }
                }
                <td class="w75">@String.Format("{0: dd/MM/yyyy}", @v.DateSold)</td>
                <td class="w10">
                    @using (Html.BeginForm("DeleteVehicle", "Home", FormMethod.Post))
                    {
                        @Html.Hidden("id", v.Id)
                        <input type="submit" class="btn btn-danger" value="Delete" />
                        @Html.ActionLink("Edit", "EditVehicle", "Home", routeValues: new { id = v.Id }, htmlAttributes: new { @class = "btn btn-primary"})
                    }                   
                </td>
            </tr>
        }
    </table>
    @Html.PagedListPager(Model, page=>Url.Action("Index", "Home", routeValues: new { page, filterby = Request.QueryString["filterby"], status = Request.QueryString["status"]}))
</div>
